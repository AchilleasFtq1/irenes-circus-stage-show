services:
  # MongoDB Database (Private Service)
  - type: pserv
    name: irenes-circus-mongodb
    env: docker
    dockerfilePath: ./mongo-dockerfile
    region: oregon
    plan: starter
    autoDeploy: true
    disk:
      name: mongo-data
      mountPath: /data/db
      sizeGB: 10
    envVars:
      - key: MONGO_INITDB_ROOT_USERNAME
        value: admin
      - key: MONGO_INITDB_ROOT_PASSWORD
        sync: false
      - key: MONGO_INITDB_DATABASE
        value: irenes-circus

  # Backend API Service
  - type: web
    name: irenes-circus-backend
    env: node
    region: oregon
    plan: free
    autoDeploy: true
    buildCommand: cd irenes-circus-backend && npm ci --include=dev && npm run build
    startCommand: cd irenes-circus-backend && npm start
    healthCheckPath: /api/health
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 10000
      - key: MONGODB_URI
        value: mongodb://admin:${MONGO_INITDB_ROOT_PASSWORD}@irenes-circus-mongodb-y8um:27017/irenes-circus?authSource=admin&tls=false
      - key: MONGO_INITDB_ROOT_PASSWORD
        sync: false
      - key: JWT_SECRET
        sync: false
      - key: JWT_EXPIRES_IN
        value: 7d
      - key: LOG_LEVEL
        value: debug
      - key: LOG_TO_CONSOLE
        value: true
      - key: FRONTEND_URL
        fromService:
          type: web
          name: irenes-circus-frontend
          property: host

  # Frontend Static Site
  - type: web
    name: irenes-circus-frontend
    env: static
    autoDeploy: true
    buildCommand: cd irenes-circus-frontend && npm ci --include=dev && npm run build
    staticPublishPath: ./irenes-circus-frontend/dist
    pullRequestPreviewsEnabled: true
    buildFilter:
      paths:
      - irenes-circus-frontend/**
    routes:
      - type: rewrite
        source: /*
        destination: /index.html
    headers:
      - path: /*
        name: X-Robots-Tag
        value: noindex
    envVars:
      - key: VITE_API_URL
        fromService:
          type: web
          name: irenes-circus-backend
          property: host
      - key: NODE_ENV
        value: production

# Note: Database seeding will be handled automatically by the backend on first startup
